{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","redux/contacts/actions.js","redux/contacts/reducer.js","redux/store.js","services/api.js","components/ContactList/ContactList.js","redux/contacts/selectors.js","components/ContactList/ContactList.container.js","redux/contacts/operations.js","components/Container/Container.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Section/Section.js","components/Loader/Loader.js","components/Error/Error.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","clearError","initialState","items","createReducer","_","payload","state","filter","id","onError","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","axios","defaults","baseURL","fetchContacts","get","addContact","contact","console","log","post","deleteContact","delete","ContactList","onDelete","map","className","styles","item","name","number","onClick","btn","getAllContacts","getFilter","normalizedFilter","toLowerCase","includes","connect","contactsSelectors","dispatch","a","api","Container","children","value","onChange","evt","target","type","title","required","input","ContactForm","errorMessage","handleChange","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","pattern","Component","data","Section","container","LoaderSpiner","Loader","color","height","width","Error","message","App","isLoading","clearFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f336fa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__g67pU\",\"btn\":\"ContactForm_btn__2lspR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3L4yW\",\"btn\":\"ContactList_btn__C9utl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1cdoV\",\"container\":\"Section_container__1sSa2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1beqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3XrIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3CqQ2\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\nexport const clearError = createAction(\"contacts/clearError\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  clearError,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: \"\",\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst items = createReducer(initialState.contacts, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst onError = (_, { payload }) => payload;\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(initialState.error, {\r\n  [fetchContactsError]: onError,\r\n  [addContactError]: onError,\r\n  [deleteContactError]: onError,\r\n  [clearError]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n// require(\"dotenv\").load();\r\n// require(\"dotenv\").config();\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_DB_HOST;\r\n// axios.defaults.baseURL = \"http://localhost:3010\";\r\n\r\nexport function fetchContacts() {\r\n  return axios.get(\"/contacts\");\r\n}\r\n\r\nexport function addContact(contact) {\r\n  console.log(contact);\r\n  return axios.post(\"/contacts\", contact);\r\n}\r\n\r\nexport function deleteContact(id) {\r\n  return axios.delete(`/contacts/${id}`);\r\n}\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul>\r\n    {contacts.map((contact) => (\r\n      <li key={contact.id} className={styles.item}>\r\n        <span>\r\n          {contact.name}:{contact.number}\r\n        </span>\r\n        <button onClick={() => onDelete(contact.id)} className={styles.btn}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getAllContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getError = (state) => state.contacts.error;\r\n\r\nconst getVisibleContacts = (state) => {\r\n  const contacts = getAllContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nexport default {\r\n  getLoading,\r\n  getAllContacts,\r\n  getFilter,\r\n  getError,\r\n  getVisibleContacts,\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/operations\";\r\nimport ContactList from \"./ContactList\";\r\nimport contactsSelectors from \"../../redux/contacts/selectors\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  clearError,\r\n} from \"./actions\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await api.fetchContacts();\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  console.log(contact);\r\n\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await api.addContact(contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await api.deleteContact(id);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children} </div>\r\n);\r\n\r\nexport default Container;\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/actions\";\r\nimport contactsSelectors from \"../../redux/contacts/selectors\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        title=\"\"\r\n        required\r\n        className={styles.input}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (evt) => dispatch(changeFilter(evt.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/operations\";\r\nimport contactsSelectors from \"../../redux/contacts/selectors\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    error: false,\r\n    errorMessage: null,\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n    console.log({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (this.state.name && this.state.number !== \"\") {\r\n      const { name, number } = this.state;\r\n      this.props.onSubmit(name, number);\r\n      this.reset();\r\n      return;\r\n    }\r\n    alert(\"Please, input name and number\");\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h2 className={styles.title}> {title}</h2>\r\n    <div className={styles.container}>{children} </div>\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nimport styles from \"./Loader.module.css\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoaderSpiner = () => {\r\n  return (\r\n    <div className={styles.Loader}>\r\n      <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpiner;\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsSelectors from \"../../redux/contacts/selectors\";\r\nimport { clearError } from \"../../redux/contacts/actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Error extends Component {\r\n  render() {\r\n    return <p>{this.props.message}</p>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  message: contactsSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearError: () => dispatch(clearError()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Error);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactList from \"./components/ContactList\";\nimport Container from \"./components/Container\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport Section from \"./components/Section\";\nimport contactsSelectors from \"./redux/contacts/selectors\";\nimport { fetchContacts } from \"./redux/contacts/operations\";\nimport { changeFilter } from \"./redux/contacts/actions\";\nimport LoaderSpiner from \"./components/Loader/Loader\";\nimport PropTypes from \"prop-types\";\nimport Error from \"./components/Error/Error\";\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    fetchContacts: PropTypes.func,\n    isLoading: PropTypes.bool,\n  };\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    const { error, isLoading } = this.props;\n    return (\n      <Container>\n        {error && <Error />}\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n        {isLoading && <LoaderSpiner />}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getAllContacts(state),\n  isLoading: contactsSelectors.getLoading(state),\n  error: contactsSelectors.getError(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n  clearFilter: () => dispatch(changeFilter(\"\")),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}